name: Rust

on:
  push:
    tags: v*

env:
  PROJECT_NAME: railslens
jobs:
  build:
    # Set the job to run on the platform specified by the matrix below
    runs-on: ${{ matrix.runner }}
 
    # Define the build matrix for cross-compilation
    strategy:
      matrix:
        include:
          - name: linux-amd64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - name: macos-amd64
            runner: macos-latest
            target: x86_64-apple-darwin
          - name: macos-arm64
            runner: macos-latest
            target: aarch64-apple-darwin
    permissions:
      contents: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: "${{ matrix.target }}"
    - name: Setup Cache
      uses: Swatinem/rust-cache@v2
    - name: Build Binary
      run: cargo build --verbose --locked --release --target ${{ matrix.target }}
    - name: Release Binary
      shell: bash
      run: |
        BIN_SUFFIX=""
        if [[ "${{ matrix.runner }}" == "windows-latest" ]]; then
          BIN_SUFFIX=".exe"
        fi

        # The built binary output location
        BIN_OUTPUT="target/${{ matrix.target }}/release/${PROJECT_NAME}${BIN_SUFFIX}"
        echo $BIN_OUTPUT
        ls -l $BIN_OUTPUT

        # Define a better name for the final binary
        BIN_RELEASE="${PROJECT_NAME}-${{ matrix.name }}${BIN_SUFFIX}"

        mkdir -p ./release
        # Move the built binary where you want it
        mv "${BIN_OUTPUT}" "./release/${BIN_RELEASE}"
        ls -l "./release/${BIN_RELEASE}"

    - name: Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: release/*
